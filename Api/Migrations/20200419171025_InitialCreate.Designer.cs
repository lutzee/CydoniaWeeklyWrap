// <auto-generated />
using System;
using Cww.Core.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Cww.Api.Migrations
{
    [DbContext(typeof(CwwDbContext))]
    [Migration("20200419171025_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Cww.Core.Database.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Cww.Core.Models.Track", b =>
                {
                    b.Property<int>("TrackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ArtistName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Mbid")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("MostListens")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("PlayCount")
                        .HasColumnType("int");

                    b.Property<string>("SpotifyUid")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("SpotifyUrl")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("TrackName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Url")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("TrackId");

                    b.ToTable("Tracks");
                });
#pragma warning restore 612, 618
        }
    }
}
